#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\begin_modules
theorems-ams-bytype
theorems-named
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Discrete random processes with memory: Models and applications
\end_layout

\begin_layout Author
Tomáš Kouřim
\begin_inset Formula $^{1,2}$
\end_inset

, Petr Volf
\begin_inset Formula $^{2}$
\end_inset

 
\begin_inset Newline newline
\end_inset

 
\begin_inset Formula $^{1}$
\end_inset

 Faculty of Nuclear Sciences and Physical Engineering, 
\begin_inset Newline newline
\end_inset

Czech Technical University in Prague
\begin_inset Newline newline
\end_inset

 
\begin_inset Formula $^{2}$
\end_inset

Institute of Information Theory and Automation,
\begin_inset Newline newline
\end_inset

 Academy of Sciences of the Czech Republic
\end_layout

\begin_layout Abstract
The contribution focuses on non-Markov discrete-time random processes, i.e.
 processes with memory, and in particular, on Bernoulli-like random walks
 where the past events affect significantly the walk's future development.
 The main concern of the paper is therefore the formulation of models describing
 the dependence of transition probabilities on the process development.
 Such an impact can be incorporated explicitly and transition probabilities
 modulated using a few parameters reflecting the current state of the walk
 as well as the information about the past path.
 The behavior of proposed random walks, as well as the task of their parameters
 estimation, are studied both theoretically and with the aid of simulations.
 
\end_layout

\begin_layout Abstract

\series bold
\emph on
Key words:
\series default
\emph default
 Random walk, history dependent transition probabilities, non-Markov process,
 success punishing/rewarding walk
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Random process is one of the most important object of mathematics.
 It is well described theoretically and has real life representations in
 almost every aspect of human life, from physics and biology to economy
 and social sciences.
 The random process itself is merely a series of realizations of random
 variables.
 Depending on the type of the random variables and their mutual interactions
 random processes can be split into a large number of different categories.
 The most common type of a discrete random process is a random walk, a mathemati
cal object first introduced by K.Pearson in 1905 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{pearson1905problem}
\end_layout

\end_inset

.
 Similarly to random processes in general, there exist many well described
 variations of a random walk with various applications to real life problems
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{turban2010random,schutz2004elephants}
\end_layout

\end_inset

.
 Yet there are still new possibilities and options how to alter and improve
 the classical random walk and present yet another model representing different
 real life events.
 One of such modifications is the random walk with varying step size introduced
 in 
\begin_inset Formula $2010$
\end_inset

 by Turban 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{turban2010random}
\end_layout

\end_inset

 which together with the idea of 
\emph on
self-exciting point processes
\emph default
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{hawkes1971spectra}
\end_layout

\end_inset

 and the perspective of model's applications in reliability analysis and
 also in sports statistics, served as an inspiration to the random walk
 with varying transition probabilities introduced by Kouřim 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{ja2017ddny, ja2019teze}
\end_layout

\end_inset

.
 In this paper, the theoretical properties of the model are described and
 further examined, numerical procedures of model parameters estimation are
 specified and the results are tested on generated data.
\end_layout

\begin_layout Standard
The rest of the paper is organized as follows.
 Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Random-walk-with"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Random-walk-aternatives"
plural "false"
caps "false"
noprefix "false"

\end_inset

 describe the properties of different versions of the model, section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Simulations"
plural "false"
caps "false"
noprefix "false"

\end_inset

 provides results from simulated model testing and finally section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Conclusion"
plural "false"
caps "false"
noprefix "false"

\end_inset

 concludes the work.
\end_layout

\begin_layout Section
Random walk with varying probabilities
\begin_inset CommandInset label
LatexCommand label
name "sec:Random-walk-with"

\end_inset


\end_layout

\begin_layout Standard
The random walk with varying probabilities is based on a standard Bernoulli
 random walk 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{feller1957introduction}
\end_layout

\end_inset

 with some starting transition probability 
\begin_inset Formula $p_{0}$
\end_inset

.
 This probability is then altered after each step of the walk using a coefficien
t 
\begin_inset Formula $\lambda$
\end_inset

 so that the repetition of the same step becomes less probable.
 Formally, it can be defined 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{ja2019teze}
\end_layout

\end_inset


\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "success_punished"

\end_inset

Let 
\begin_inset Formula ${\{X_{n}\}}_{n=1}^{\infty}$
\end_inset

 and 
\begin_inset Formula ${\{P_{n}\}}_{n=1}^{\infty}$
\end_inset

 be sequences of discrete random variables, and 
\begin_inset Formula $p_{0}\in[0,\,1]$
\end_inset

 and 
\begin_inset Formula $\lambda\in(0,\,1)$
\end_inset

 constant parameters, such that the first random variable 
\begin_inset Formula $X_{1}$
\end_inset

 is given by
\begin_inset Formula 
\[
P(X_{1}=1)=p_{0}
\]

\end_inset


\begin_inset Formula 
\[
P(X_{1}=-1)=1-p_{0}.
\]

\end_inset

Further 
\begin_inset Formula 
\begin{equation}
P_{1}=\lambda p_{0}+\frac{1}{2}(1-\lambda)(1-X_{1})\label{eq:P!1_def}
\end{equation}

\end_inset

and for 
\begin_inset Formula $i\geq2$
\end_inset


\begin_inset Formula 
\[
P(X_{i}=1|P_{i-1}=p_{i-1})=p_{i-1}
\]

\end_inset

 
\begin_inset Formula 
\[
P(X_{i}=-1|P_{i-1}=p_{i-1})=1-p_{i-1}
\]

\end_inset


\begin_inset Formula 
\begin{equation}
P_{i}=\lambda P_{i-1}+\frac{1}{2}(1-\lambda)(1-X_{i}).\label{eq:Pi_def}
\end{equation}

\end_inset

The sequence 
\begin_inset Formula ${\{S_{n}\}}{}_{n=0}^{\infty},\;S_{N}=S_{0}+\sum_{i=1}^{N}X_{i}$
\end_inset

 for 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

, with 
\begin_inset Formula $S_{0}\in\mathbb{R}$
\end_inset

 some given starting position, is called a 
\emph on
random walk with varying probabilities
\emph default
, with 
\begin_inset Formula ${\{X_{n}\}}_{n=1}^{\infty}$
\end_inset

 being the steps of the walker and 
\begin_inset Formula ${\{P_{n}\}}_{n=1}^{\infty}$
\end_inset

 transition probabilities.
\end_layout

\begin_layout Definition
From 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{ja2019teze}
\end_layout

\end_inset

, it can be further derived that at each step 
\begin_inset Formula $t+k,\;t,\,k>0$
\end_inset

 the value of a transition probability 
\begin_inset Formula $P_{t+k}$
\end_inset

 can be computed from the knowledge of transition probability 
\begin_inset Formula $P_{t}$
\end_inset

 and the realization of the walk 
\begin_inset Formula $X_{t+1},\,\dots,\,X_{t+k}$
\end_inset

 using formula 
\begin_inset Formula 
\[
P_{t+k}=P_{t}\lambda^{t+k}+\frac{1}{2}(1-\lambda)\sum_{i=t+1}^{t+k}\lambda^{t+k-i}(1-X_{i}).
\]

\end_inset


\end_layout

\begin_layout Subsection
Properties
\end_layout

\begin_layout Standard
Basic properties of the random walk with varying probabilities are described
 in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{ja2019teze}
\end_layout

\end_inset

, namely that 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula 
\begin{equation}
EP_{t}=(2\lambda-1)^{t}p_{0}+\frac{1-(2\lambda-1)^{t}}{2}\label{eq:EPt}
\end{equation}

\end_inset

and 
\begin_inset Formula 
\begin{equation}
ES_{t}=S_{0}+(2p_{0}-1)\frac{1-(2\lambda-1)^{t}}{2(1-\lambda)}\label{eq:ESt}
\end{equation}

\end_inset

 for 
\begin_inset Formula $\forall t\geq1$
\end_inset

.
 This further yields 
\begin_inset Formula $EP_{t}\rightarrow\frac{1}{2}$
\end_inset

 and 
\begin_inset Formula $ES_{t}\rightarrow S_{0}+\frac{2p_{0}-1}{2(1-\lambda)}$
\end_inset

 for 
\begin_inset Formula $t\rightarrow+\infty$
\end_inset

.
\end_layout

\begin_layout Standard
Now to describe the variance of the transition probability, let us prove
 the following proposition.
\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "PropVarP-succes"

\end_inset

For 
\begin_inset Formula $\forall t\geq1,$
\end_inset

 it holds that 
\begin_inset Formula 
\begin{equation}
Var(P_{t})=(3\lambda^{2}-2\lambda)^{t}p_{0}^{2}+\sum_{i=1}^{t}K(i-1)(3\lambda^{2}-2\lambda)^{t-i}-k(t)^{2},\label{eq:VarP-proposition}
\end{equation}

\end_inset

 where 
\begin_inset Formula 
\[
k(t)=EP_{t}=(2\lambda-1)^{t}p_{0}+\frac{1-(2\lambda-1)^{t}}{2}
\]

\end_inset

 and 
\begin_inset Formula 
\[
K(t)=k(t)\cdot(-3\lambda^{2}+4\lambda-1)+(1-\lambda)^{2}.
\]

\end_inset


\end_layout

\begin_layout Proof
To prove the proposition several support formulas has to be derived first.
 From the definition of variance follows 
\begin_inset Formula 
\begin{equation}
Var(P_{t})=E(P_{t}^{2})-E(P_{t})^{2}.\label{eq:VarP-definition}
\end{equation}

\end_inset


\begin_inset Formula $E(P_{t})$
\end_inset

 is given by (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:EPt"
plural "false"
caps "false"
noprefix "false"

\end_inset

), therefore in order to prove the proposition it is sufficient to prove
 the following statement
\begin_inset Formula 
\begin{equation}
E(P_{t}^{2})=(3\lambda^{2}-2\lambda)^{t}p_{0}^{2}+\sum_{i=1}^{t}K(i-1)(3\lambda^{2}-2\lambda)^{t-i}.\label{eq:EPt2-finalvzorec}
\end{equation}

\end_inset

To do so, let us first express the relation between 
\begin_inset Formula $E(P_{t}^{2})$
\end_inset

 and 
\begin_inset Formula $E(P_{t-1}^{2})$
\end_inset

 and 
\begin_inset Formula $E(P_{t-1}).$
\end_inset

 From the definition of the expected value and the definition of the walk
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Pi_def"
plural "false"
caps "false"
noprefix "false"

\end_inset

) follows
\begin_inset Formula 
\[
E(P_{t}^{2})=E[E(P_{t}^{2}|P_{t-1}^{2})]=E[E(P_{t}^{2}|P_{t-1})]=
\]

\end_inset


\begin_inset Formula 
\begin{equation}
=E[E(\lambda P_{t-1}+\frac{1}{2}(1-\lambda)(1-X_{t}))^{2}|P_{t-1}].\label{eq:EPt2-zaklad}
\end{equation}

\end_inset

Using that 
\begin_inset Formula $E(X_{t}|P_{t-1})=2P_{t-1}-1,$
\end_inset


\begin_inset Formula $E(X_{t}^{2})=1$
\end_inset

 and further that 
\begin_inset Formula 
\[
E[(1-X_{t})^{2}|P_{t-1}]=E[(1-2X_{t}+X_{t}^{2})|P_{t-1}]=E[(2-2X_{t})|P_{t-1}]=
\]

\end_inset


\begin_inset Formula 
\[
=4(1-P_{t-1}),
\]

\end_inset

equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:EPt2-zaklad"
plural "false"
caps "false"
noprefix "false"

\end_inset

) further yields
\begin_inset Formula 
\[
E(P_{t}^{2})=E[\lambda^{2}P_{t-1}^{2}+\lambda P_{t-1}(1-\lambda)E(1-X_{t}|P_{t-1})+\frac{1}{4}(1-\lambda)^{2}E((1-X_{t})^{2}|P_{t-1})]=
\]

\end_inset


\begin_inset Formula 
\[
=E[\lambda^{2}P_{t-1}^{2}+2\lambda P_{t-1}(1-\lambda)(1-P_{t-1})+(1-\lambda)^{2}(1-P_{t-1})]
\]

\end_inset

 and finally
\begin_inset Formula 
\begin{equation}
E(P_{t}^{2})=E(P_{t-1}^{2})(3\lambda^{2}-2\lambda)+EP_{t-1}(-3\lambda^{2}+4\lambda-1)+(1-\lambda)^{2}.\label{eq:EPt2-pokrocile}
\end{equation}

\end_inset

Statement (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:EPt2-finalvzorec"
plural "false"
caps "false"
noprefix "false"

\end_inset

) can be proved using induction.
 Based on the trivial fact that 
\begin_inset Formula $Ep_{0}=p_{0}$
\end_inset

 and 
\begin_inset Formula $E(p_{0})^{2}=p_{0}^{2}$
\end_inset

, for 
\begin_inset Formula $t=1$
\end_inset

 we get
\begin_inset Formula 
\[
E(P_{1}^{2})=(3\lambda^{2}-2\lambda)^{1}p_{0}^{2}+\sum_{i=1}^{1}K(i-1)(3\lambda^{2}-2\lambda)^{1-i}=(3\lambda^{2}-2\lambda)p_{0}^{2}+K(0)=
\]

\end_inset


\begin_inset Formula 
\[
=(3\lambda^{2}-2\lambda)p_{0}^{2}+((2\lambda-1)^{0}p_{0}+\frac{1-(2\lambda-1)^{0}}{2})\cdot(-3\lambda^{2}+4\lambda-1)+(1-\lambda)^{2}=
\]

\end_inset


\begin_inset Formula 
\[
=(3\lambda^{2}-2\lambda)p_{0}^{2}+p_{0}(-3\lambda^{2}+4\lambda-1)+(1-\lambda)^{2},
\]

\end_inset

and from (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:EPt2-pokrocile"
plural "false"
caps "false"
noprefix "false"

\end_inset

) follows that the induction assumption holds.
 Now for the induction step 
\begin_inset Formula $t\rightarrow t+1$
\end_inset

 we get by substituting (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:EPt2-finalvzorec"
plural "false"
caps "false"
noprefix "false"

\end_inset

) into (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:EPt2-pokrocile"
plural "false"
caps "false"
noprefix "false"

\end_inset

)
\begin_inset Formula 
\[
E(P_{t+1}^{2})=E(P_{t}^{2})(3\lambda^{2}-2\lambda)+EP_{t}(-3\lambda^{2}+4\lambda-1)+(1-\lambda)^{2}=
\]

\end_inset


\begin_inset Formula 
\[
=((3\lambda^{2}-2\lambda)^{t}p_{0}^{2}+\sum_{i=1}^{t}K(i-1)(3\lambda^{2}-2\lambda)^{t-i})\cdot(3\lambda^{2}-2\lambda)+K(t)=
\]

\end_inset


\begin_inset Formula 
\[
=(3\lambda^{2}-2\lambda)^{t+1}p_{0}^{2}+\sum_{i=1}^{t}K(i-1)(3\lambda^{2}-2\lambda)^{t+1-i}+K(t)=
\]

\end_inset


\begin_inset Formula 
\[
=(3\lambda^{2}-2\lambda)^{t+1}p_{0}^{2}+\sum_{i=1}^{t+1}K(i-1)(3\lambda^{2}-2\lambda)^{t+1-i}
\]

\end_inset

and the formula thus holds.
 Now substituting (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:EPt"
plural "false"
caps "false"
noprefix "false"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:EPt2-finalvzorec"
plural "false"
caps "false"
noprefix "false"

\end_inset

) into (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:VarP-definition"
plural "false"
caps "false"
noprefix "false"

\end_inset

) yields (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:VarP-proposition"
plural "false"
caps "false"
noprefix "false"

\end_inset

) and proves the Proposition.
\end_layout

\begin_layout Standard
And similarly for the variance of the position of the walker, following
 statements can be proved.
\end_layout

\begin_layout Corollary
For 
\begin_inset Formula $t\rightarrow+\infty,$
\end_inset

 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula 
\[
Var(P_{t})\rightarrow\frac{\frac{1}{2}(1-\lambda^{2})}{(1-3\lambda^{2}+2\lambda)}-\frac{1}{4}.
\]

\end_inset


\end_layout

\begin_layout Section
Random walk with varying transition probability - alternatives
\begin_inset CommandInset label
LatexCommand label
name "sec:Random-walk-aternatives"

\end_inset


\end_layout

\begin_layout Subsection
Success rewarded
\end_layout

\begin_layout Standard
The basic definition of the random walk (Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "success_punished"
plural "false"
caps "false"
noprefix "false"

\end_inset

) presents a 
\emph on
success punished 
\emph default
model, meaning the probability of an event is decreased every time that
 event occurs.
 Opposite situation can be considered, where the probability of an event
 is increased every time that event occurs.
 Formally, such a random walk is defined in a following manner 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{ja2019teze}
\end_layout

\end_inset

.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "succes_rewarded"

\end_inset

Let 
\begin_inset Formula ${\{X_{n}\}}_{n=1}^{\infty}$
\end_inset

, 
\begin_inset Formula $p_{0}$
\end_inset

 and 
\begin_inset Formula $\lambda$
\end_inset

 be as in Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "success_punished"

\end_inset

.
 Further let 
\begin_inset Formula ${\{P_{n}\}}_{n=1}^{\infty}$
\end_inset

 be a sequence of discrete random variables given by
\begin_inset Formula 
\begin{equation}
P_{1}=\lambda p_{0}+\frac{1}{2}(1-\lambda)(1+X_{1})\label{eq:P1_def-reward}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
P_{i}=\lambda P_{i-1}+\frac{1}{2}(1-\lambda)(1+X_{i})\;\;\forall i\geq2.\label{eq:Pi_def-reward}
\end{equation}

\end_inset


\end_layout

\begin_layout Definition
The sequence 
\begin_inset Formula ${\{S_{n}\}}{}_{n=0}^{\infty},\;S_{N}=S_{0}+\sum_{i=1}^{N}X_{i}$
\end_inset

 for 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

, with 
\begin_inset Formula $S_{0}\in\mathbb{R}$
\end_inset

 some given starting position, is a random walk with varying probabilities
 - 
\emph on
success rewarded
\emph default
.
\end_layout

\begin_layout Standard
In this section, all variables are considered to be related to the 
\emph on
success rewarded 
\emph default
model, whereas the variables with the same notations (
\begin_inset Formula $P,\,X,\,S$
\end_inset

) from previous Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Random-walk-with"
plural "false"
caps "false"
noprefix "false"

\end_inset

 are considered to be related to the model from Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "success_punished"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
The 
\emph on
success rewarded
\emph default
 version of the model behaves differently than the 
\emph on
success punishe
\emph default
d version, which can be observed with the help of the following propositions.
\end_layout

\begin_layout Proposition
For 
\begin_inset Formula $\forall t\geq2,$
\end_inset

 
\begin_inset Formula 
\begin{equation}
P_{t}=p_{0}\lambda^{t}+\frac{1}{2}(1-\lambda)\sum_{i=1}^{t}\lambda^{t-i}(1+X_{i})\label{eq:propSuccess1}
\end{equation}

\end_inset


\end_layout

\begin_layout Proof
The proposition is proved using induction.
 For 
\begin_inset Formula $t=2$
\end_inset

 using (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:P1_def-reward"
plural "false"
caps "false"
noprefix "false"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Pi_def-reward"
plural "false"
caps "false"
noprefix "false"

\end_inset

) it holds that
\begin_inset Formula 
\[
P_{2}=\lambda P_{1}+\frac{1}{2}(1-\lambda)(1+X_{2})=\lambda(\lambda p_{0}+\frac{1}{2}(1-\lambda)(1+X_{1}))+\frac{1}{2}(1-\lambda)(1+X_{2})=
\]

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
=p_{0}\lambda^{2}+\frac{1}{2}(1-\lambda)\sum_{i=1}^{2}\lambda^{2-i}(1+X_{i}),
\]

\end_inset

which is in accordance with (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:propSuccess1"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
 Now for the induction step 
\begin_inset Formula $t\rightarrow t+1$
\end_inset

 we obtain from (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Pi_def-reward"
plural "false"
caps "false"
noprefix "false"

\end_inset

) and the induction assumption
\begin_inset Formula 
\[
P_{t+1}=\lambda P_{t}+\frac{1}{2}(1-\lambda)(1+X_{t+1})=
\]

\end_inset


\begin_inset Formula 
\[
=\lambda(p_{0}\lambda^{t}+\frac{1}{2}(1-\lambda)\sum_{i=1}^{t}\lambda^{t-i}(1+X_{i}))+\frac{1}{2}(1-\lambda)(1+X_{t+1})=
\]

\end_inset


\begin_inset Formula 
\[
=p_{0}\lambda^{t+1}+\frac{1}{2}(1-\lambda)\sum_{i=1}^{t}\lambda^{t-i+1}(1+X_{i})+\frac{1}{2}(1-\lambda)(1+X_{t+1})=
\]

\end_inset


\begin_inset Formula 
\[
=p_{0}\lambda^{t+1}+\frac{1}{2}(1-\lambda)\sum_{i=1}^{t+1}\lambda^{t+1-i}(1+X_{i}).
\]

\end_inset


\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "PropReward2"

\end_inset

For 
\begin_inset Formula $\forall t\geq1,$
\end_inset

 
\begin_inset Formula $E(P_{t})=p_{0}.$
\end_inset


\end_layout

\begin_layout Proof
Using 
\begin_inset Formula $E(X_{t}|P_{t-1})=2P_{t-1}-1$
\end_inset

 and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Pi_def-reward"
plural "false"
caps "false"
noprefix "false"

\end_inset

) we obtain
\begin_inset Formula 
\[
EP_{t}=E[E(P_{t}|P_{t-1})]=E[E(\lambda P_{t-1}+\frac{1}{2}(1-\lambda)(1+X_{t})|P_{t-1})]=
\]

\end_inset


\begin_inset Formula 
\[
=E[\lambda P_{t-1}+\frac{1}{2}(1-\lambda)(1+2P_{t-1}-1)]=E[\lambda P_{t-1}+(1-\lambda)P_{t-1})=
\]

\end_inset


\begin_inset Formula 
\[
=E(P_{t-1}).
\]

\end_inset

Recursively we get 
\begin_inset Formula 
\begin{equation}
E(P_{t})=E(p_{0})=p_{0}.\label{eq:EPt-reward-formula}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Now to calculate the expected position of the walker at a given step 
\begin_inset Formula $t\geq1$
\end_inset

, it is easy to see that 
\begin_inset Formula $E(S_{t})=S_{t-1}+2P_{t-1}-1$
\end_inset

.
 From this, we can prove the following statement about the expected position
 of the walker after step 
\begin_inset Formula $t$
\end_inset

 just from the knowledge of the input parameters.
\end_layout

\begin_layout Proposition
For 
\begin_inset Formula $\forall t\geq1,$
\end_inset

 
\begin_inset Formula 
\[
E(S_{t})=S_{0}+t(2p_{0}-1).
\]

\end_inset


\end_layout

\begin_layout Proof
Using the result of Proposition 
\begin_inset CommandInset ref
LatexCommand ref
reference "PropReward2"
plural "false"
caps "false"
noprefix "false"

\end_inset

 we get 
\begin_inset Formula 
\[
E(S_{t+1})=E[E(S_{t+1}|S_{t})]=E[S_{t}+(2P_{t-1}-1)]=
\]

\end_inset


\begin_inset Formula 
\[
=ES_{t}+(2p_{0}-1)
\]

\end_inset

which then recursively proves the statement.
\end_layout

\begin_layout Corollary
For 
\begin_inset Formula $t\rightarrow+\infty,$
\end_inset

 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula 
\[
E(S_{t})\rightarrow\begin{cases}
+\infty & p_{0}>\frac{1}{2}\\
0 & p_{0}=\frac{1}{2}\\
-\infty & p_{0}<\frac{1}{2}
\end{cases}.
\]

\end_inset


\end_layout

\begin_layout Proposition
For 
\begin_inset Formula $\forall t\geq1,$
\end_inset

 
\begin_inset Formula 
\begin{equation}
Var(P_{t})=(2\lambda-\lambda^{2})^{t}p_{0}^{2}+p_{0}(1-\lambda)^{2}\sum_{i=1}^{t}(2\lambda-\lambda^{2})^{t-i}-p_{0}^{2}.\label{eq:VarPt-reward-prop}
\end{equation}

\end_inset


\end_layout

\begin_layout Proof
The proof will be done in several steps similar as in Proposition 
\begin_inset CommandInset ref
LatexCommand ref
reference "PropVarP-succes"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 It is based on the definition of variance 
\begin_inset Formula 
\begin{equation}
Var(P_{t})=E(P_{t}^{2})-E(P_{t})^{2}.\label{eq:VarPtreward}
\end{equation}

\end_inset

From Proposition 
\begin_inset CommandInset ref
LatexCommand ref
reference "PropReward2"
plural "false"
caps "false"
noprefix "false"

\end_inset

 follows 
\begin_inset Formula $E(P_{t})=p_{0}$
\end_inset

 and it is thus sufficient to prove that 
\begin_inset Formula 
\begin{equation}
E(P_{t}^{2})=(2\lambda-\lambda^{2})^{t}p_{0}^{2}+p_{0}(1-\lambda)^{2}\sum_{i=1}^{t}(2\lambda-\lambda^{2})^{t-i}.\label{eq:Ept2-finalvzorec-reward}
\end{equation}

\end_inset

The proof will be done using induction again.
 First observe that
\begin_inset Formula 
\[
E(P_{t}^{2})=E[E(P_{t}^{2}|P_{t-1}^{2})]=E[E(P_{t}^{2}|P_{t-1})]=
\]

\end_inset


\begin_inset Formula 
\[
=E[E(\lambda P_{t-1}+\frac{1}{2}(1-\lambda)(1+X_{t}))^{2}|P_{t-1}]=
\]

\end_inset


\begin_inset Formula 
\begin{equation}
=EP_{t-1}^{2}(2\lambda-\lambda^{2})+p_{0}(1-\lambda)^{2},\label{eq:EPt-EPt-1-reward}
\end{equation}

\end_inset

where the facts that 
\begin_inset Formula $E[(1+X_{t})^{2}|P_{t-1}]=4P_{t-1}$
\end_inset

, 
\begin_inset Formula $E[(1+X_{t})|P_{t-1}]=2P_{t-1}$
\end_inset

 and Proposition 
\begin_inset CommandInset ref
LatexCommand ref
reference "PropReward2"
plural "false"
caps "false"
noprefix "false"

\end_inset

 were used.
 Now for 
\begin_inset Formula $t=1$
\end_inset

 we get 
\begin_inset Formula 
\[
EP_{1}=p_{0}^{2}(2\lambda-\lambda^{2})+p_{0}(1-\lambda)^{2}=(2\lambda-\lambda^{2})^{1}p_{0}^{2}+p_{0}(1-\lambda)^{2}\sum_{i=1}^{1}(2\lambda-\lambda^{2})^{1-i}
\]

\end_inset

and the induction assumption holds.
 For the induction step 
\begin_inset Formula $t\rightarrow t+1$
\end_inset

 we get from the induction assumption and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:EPt-EPt-1-reward"
plural "false"
caps "false"
noprefix "false"

\end_inset

) 
\begin_inset Formula 
\[
E(P_{t+1}^{2})=EP_{t}^{2}(2\lambda-\lambda^{2})+p_{0}(1-\lambda)^{2}=
\]

\end_inset


\begin_inset Formula 
\[
=((2\lambda-\lambda^{2})^{t}p_{0}^{2}+p_{0}(1-\lambda)^{2}\sum_{i=1}^{t}(2\lambda-\lambda^{2})^{t-i})\cdot(2\lambda-\lambda^{2})+p_{0}(1-\lambda)^{2}=
\]

\end_inset

 
\begin_inset Formula 
\[
=(2\lambda-\lambda^{2})^{t+1}p_{0}^{2}+p_{0}(1-\lambda)^{2}\sum_{i=1}^{t}(2\lambda-\lambda^{2})^{t-i+1}+p_{0}(1-\lambda)^{2}=
\]

\end_inset


\begin_inset Formula 
\[
=(2\lambda-\lambda^{2})^{t+1}p_{0}^{2}+p_{0}(1-\lambda)^{2}\sum_{i=1}^{t+1}(2\lambda-\lambda^{2})^{t+1-i}.
\]

\end_inset

The Proposition statement is then obtained by substituting (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:EPt-reward-formula"
plural "false"
caps "false"
noprefix "false"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Ept2-finalvzorec-reward"
plural "false"
caps "false"
noprefix "false"

\end_inset

) into (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:VarPtreward"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Corollary
For 
\begin_inset Formula $t\rightarrow+\infty,$
\end_inset

 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula 
\[
Var(P_{t})\rightarrow p_{0}(1-p_{0}).
\]

\end_inset


\end_layout

\begin_layout Subsection
Two lambdas
\end_layout

\begin_layout Standard
Another level of complexity can be added by using separate 
\begin_inset Formula $\lambda$
\end_inset

 parameters for each direction of the walk.
 Again, two ways of handling success are available.
 The 
\emph on
success punished
\emph default
 version is defined as follows.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "2lambdas"

\end_inset

Let 
\begin_inset Formula ${\{X_{n}\}}_{n=1}^{\infty}$
\end_inset

 and 
\begin_inset Formula $p_{0}$
\end_inset

 be as in Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "success_punished"

\end_inset

.
 Further let 
\begin_inset Formula $\lambda_{0},\,\lambda_{1}\in(0,\,1)$
\end_inset

 be constant coefficients and 
\begin_inset Formula ${\{P_{n}\}}_{n=1}^{\infty}$
\end_inset

 be a sequence of discrete random variables given by
\begin_inset Formula 
\begin{equation}
P_{1}=\frac{1}{2}[(1+X_{1})\lambda_{0}p_{0}+(1-X_{1})(1-\lambda_{1}(1-p_{0}))]\label{eq:P!1_def-1-1}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
P_{i}=\frac{1}{2}[(1+X_{i})\lambda_{0}P_{i-1}+(1-X_{i})(1-\lambda_{1}(1-P_{i-1}))]\;\;\forall i\geq2.\label{eq:Pi_def-1-1}
\end{equation}

\end_inset

The sequence 
\begin_inset Formula ${\{S_{n}\}}{}_{n=0}^{\infty},\;S_{N}=S_{0}+\sum_{i=1}^{N}X_{i}$
\end_inset

 for 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

, with 
\begin_inset Formula $S_{0}\in\mathbb{R}$
\end_inset

 some given starting position, is a random walk with varying probabilities
 - 
\emph on
success punished two 
\begin_inset Formula $\lambda$
\end_inset


\emph default
.
\end_layout

\begin_layout Standard
And similarly the 
\emph on
success rewarded
\emph default
 version.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "2lambdas-reward"

\end_inset

Let 
\begin_inset Formula ${\{X_{n}\}}_{n=1}^{\infty}$
\end_inset

 and 
\begin_inset Formula $p_{0}$
\end_inset

 be as in Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "success_punished"

\end_inset

.
 Further let 
\begin_inset Formula $\lambda_{0},\,\lambda_{1}\in(0,\,1)$
\end_inset

 be constant coefficients and 
\begin_inset Formula ${\{P_{n}\}}_{n=1}^{\infty}$
\end_inset

 be a sequence of discrete random variables given by
\begin_inset Formula 
\[
P_{1}=\frac{1}{2}[(1-X_{1})\lambda_{0}p_{0}+(1+X_{1})(1-\lambda_{1}(1-p_{0}))]
\]

\end_inset


\begin_inset Formula 
\[
P_{i}=\frac{1}{2}[(1-X_{i})\lambda_{0}P_{i-1}+(1+X_{i})(1-\lambda_{1}(1-P_{i-1}))]\;\;\forall i\geq2.
\]

\end_inset

The sequence 
\begin_inset Formula ${\{S_{n}\}}{}_{n=0}^{\infty},\;S_{N}=S_{0}+\sum_{i=1}^{N}X_{i}$
\end_inset

 for 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

, with 
\begin_inset Formula $S_{0}\in\mathbb{R}$
\end_inset

 some given starting position, is a random walk with varying probabilities
 - 
\emph on
success rewarded two 
\begin_inset Formula $\lambda$
\end_inset


\emph default
.
\end_layout

\begin_layout Standard
Properties of the two 
\begin_inset Formula $\lambda$
\end_inset

 models can be derived in a similar manner as for the single 
\begin_inset Formula $\lambda$
\end_inset

 case shown in previous sections.
\end_layout

\begin_layout Subsection
Other alternatives
\end_layout

\begin_layout Standard
The presented model of a random walk can be further developed and more versions
 can be derived and described.
 These variants include but are not limited to multidimensional walk (with
 either one or multiple 
\begin_inset Formula $\lambda$
\end_inset

 parameters, again with 
\emph on
success rewarded 
\emph default
or 
\emph on
success punished
\emph default
), a walk with the transition probability explicitly dependent on more than
 the last step, i.e.
 
\begin_inset Formula $P_{t}(k)\sim P_{t}(X_{t},\,X_{t-1},\dots,X_{t-(k-1)})$
\end_inset

, or the walk with 
\begin_inset Formula $\lambda$
\end_inset

 parameter not constant, but a function of the time 
\begin_inset Formula $t$
\end_inset

, i.e.
 
\begin_inset Formula $P_{t}(\lambda(t)$
\end_inset

).
 Detailed properties of such walks together with their possible applications
 on real life problems will by subject of a further study.
\end_layout

\begin_layout Section
Simulations
\begin_inset CommandInset label
LatexCommand label
name "sec:Simulations"

\end_inset


\end_layout

\begin_layout Standard
Testing dataset was generated in order to validate the quality of the model
 and its ability to be fitted on a real life problem.
 The data generation was performed using the Python programming language
 and its package Numpy.
 Following values of input parameters were chosen.
 The memory coefficient values varied in 
\begin_inset Formula $\lambda\in\{0.5,\,0.8,\,0.9,\,0.99\}$
\end_inset

 and similarly the pair of memory coefficients 
\begin_inset Formula $[\lambda_{0},\,\lambda_{1}]\in\{[0.5,\,0.8],\,[0.5,\,0.99],\,[0.99,\,0.9]\}$
\end_inset

.
 The starting transition probability 
\begin_inset Formula $p_{0}$
\end_inset

 was chosen from the set 
\begin_inset Formula $P_{0}=\{0.5,\,0.8,\,0.9,\,0.99\}$
\end_inset

 and the length of the walk was 
\series bold

\begin_inset Formula $n\in\{5,\,10,\,50,\,100\}$
\end_inset


\series default
.
 For each permutation of the parameters 
\begin_inset Formula $100$
\end_inset

 walks were generated.
\end_layout

\begin_layout Standard
Four different fitting tasks were performed on the generated dataset.
 Using the maximum likelihood estimate (MLE) 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{rossi2018mathematical}
\end_layout

\end_inset

 and again Python language with Numpy package the fitting tasks were
\end_layout

\begin_layout Itemize

\lang american
Find 
\begin_inset Formula $\overrightarrow{\lambda}$
\end_inset

 with known 
\begin_inset Formula $p_{0}$
\end_inset

 and model type
\end_layout

\begin_layout Itemize

\lang american
Find 
\begin_inset Formula $p_{0}$
\end_inset

 with known 
\begin_inset Formula $\overrightarrow{\lambda}$
\end_inset

 and model type
\end_layout

\begin_layout Itemize

\lang american
Find 
\begin_inset Formula $p_{0},\,\overrightarrow{\lambda}$
\end_inset

 with known model type
\end_layout

\begin_layout Itemize

\lang american
Find model type without any prior knowledge
\end_layout

\begin_layout Standard
Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Fitting-results"
plural "false"
caps "false"
noprefix "false"

\end_inset

 shows the results of the model & parameter fitting algorithms using the
 MLE method.
 The data shows the model can be fitted with high accuracy.
 The only exception is finding the correct model type when the original
 model was based on a single 
\begin_inset Formula $\lambda$
\end_inset

 parameter.
 The maximum-likelihood estimate almost always prefers the model with two
 
\begin_inset Formula $\lambda$
\end_inset

 parameters.
 To improve the results the Akaike Information Criterion 
\begin_inset Formula $AIC=2k-2ln(\hat{L})$
\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{akaike1974new}
\end_layout

\end_inset

, which helps to correctly identify models with smaller number of parameters,
 was used.
 Here 
\begin_inset Formula $k$
\end_inset

 is the number of model parameters and 
\begin_inset Formula $\hat{L}$
\end_inset

 is the maximal likelihood.
 This approach shows much better results.
 The performance can be observed in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Fitting-results-Akaike"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\lang american
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
SP - 1
\begin_inset Formula $\lambda$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
SR - 1
\begin_inset Formula $\lambda$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
SP - 2
\begin_inset Formula $\lambda$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
SR - 2
\begin_inset Formula $\lambda$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
Find 
\begin_inset Formula $\overrightarrow{\lambda}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
96.9 %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
34.4 %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
80.2 %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
77.1 %
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
Find 
\begin_inset Formula $p_{o}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
92.2 %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
82.8 %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
89.6 %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
93.8 %
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
Find 
\begin_inset Formula $\overrightarrow{\lambda},\,p_{0}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
91.4 %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
84.4 %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
83.3 %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
79.9 %
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
Find model type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
1.6 %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
1.6 %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
87.5 %
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
89.6 %
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\lang english

\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Fitting-results"

\end_inset

Fitting results.
 
\emph on
SP 
\emph default
stands for 
\emph on
success punished
\emph default
, 
\emph on
SR
\emph default
 for 
\emph on
success rewarded
\emph default
.
 
\begin_inset Formula $1\lambda$
\end_inset

 vs.
 
\begin_inset Formula $2\lambda$
\end_inset

 distinguish between the basic model with a single 
\begin_inset Formula $\lambda$
\end_inset

 parameter and the more advanced model with two 
\begin_inset Formula $\lambda$
\end_inset

 parameters.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\lang american
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
SP - 1
\begin_inset Formula $\lambda$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
SR - 1
\begin_inset Formula $\lambda$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
SP - 2
\begin_inset Formula $\lambda$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
SR - 2
\begin_inset Formula $\lambda$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang american
Find model type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
79.7%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
79.7%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
83.3%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
83.3%
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\lang english

\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Fitting-results-Akaike"

\end_inset

Finding the optimal model type using the Akaike Information Criterion.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusion
\begin_inset CommandInset label
LatexCommand label
name "sec:Conclusion"

\end_inset


\end_layout

\begin_layout Standard
This work follows up on the recent results on random walks with varying
 probabilities.
 It describes and proves certain properties of such a walk, other properties
 have been studied with the help of numerical methods.
 The study also shows the results of the maximum likelihood and 
\begin_inset Formula $AIC$
\end_inset

 based estimations of model parameters and types using optimization procedures.
 The method has been tested successfully on a set of randomly generated
 data.
 The presented model has also many possible uses in real life application.
 Such a type of random walk describes especially well processes where either
 a single or just a small number of events can significantly affect the
 future development of the process.
 Such processes can be found in reliability analysis, medical as well as
 econometric studies, and very often in sports modeling.
 The authors recently published a study where the success rewarded model
 was applied to predict the 
\emph on
in-play
\emph default
 development of a Grand Slam tennis matches with compelling results when
 used for live betting against a bookmaker 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cite{ja2019imam}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
The source code containing all functionality mentioned in this article is
 freely available as open source at GitHub (https://github.com/tomaskourim/amista
t2019).
\end_layout

\begin_layout Section*
Acknowledgment
\end_layout

\begin_layout Standard
The research was supported by the grant No.
 18-02739S of the Grant Agency of the Czech Republic.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "doktknih"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
